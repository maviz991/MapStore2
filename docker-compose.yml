version: "3.8"

services:
  postgres:
    build:
      context: ./docker/postgres/
    image: geosolutions-mapstore/postgis
    container_name: postgres
    restart: on-failure
    healthcheck:
      test: /usr/bin/pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 120
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: geostore
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # <-- Corrigido para mapeamento
    networks:
      - mapstore-network

  geoserver:
    image: kartoza/geoserver:2.21.2
    container_name: geoserver # <-- Adicionado para consistência
    restart: on-failure # <-- Adicionado para consistência
    ports:
      - "8282:8080"
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
    environment:
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    networks:
      - mapstore-network

  mapstore:
    build:
      context: .
      dockerfile: docker/mapstore/Dockerfile # <-- Corrigido para o caminho padrão
    container_name: mapstore
    restart: on-failure # <-- Adicionado para consistência
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mapstore-network
    # A porta interna 8080 do mapstore não precisa ser exposta aqui
    # porque o proxy vai acessá-la pela rede interna.

  proxy:
    image: nginx:1.21-alpine # <-- Usando uma versão específica e leve
    container_name: proxy
    restart: on-failure
    volumes:
      - ./docker/proxy/conf.d:/etc/nginx/conf.d # <-- CORREÇÃO PRINCIPAL: Montando o diretório
    ports:
      - "8080:80" # <-- CORREÇÃO: Usando a porta 8080 do host
    depends_on:
      - mapstore
      - geoserver
    networks:
      - mapstore-network

networks:
  mapstore-network:
    driver: bridge

volumes:
  pg_data:
  geoserver_data: